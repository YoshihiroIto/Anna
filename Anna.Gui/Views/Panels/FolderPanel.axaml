<UserControl x:Class="Anna.Gui.Views.Panels.FolderPanel"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:actions="clr-namespace:Anna.Gui.Messaging.Behaviors.Actions"
             xmlns:behaviors="clr-namespace:Anna.Gui.Views.Behaviors"
             xmlns:behaviors1="clr-namespace:Anna.Gui.Messaging.Behaviors"
             xmlns:controls="clr-namespace:Anna.Gui.Views.Controls"
             xmlns:converters="clr-namespace:Anna.Gui.Views.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dialogs="clr-namespace:Anna.Gui.Views.Windows.Dialogs"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:panels="clr-namespace:Anna.Gui.Views.Panels"
             xmlns:templateSelectors="clr-namespace:Anna.Gui.Views.TemplateSelectors"
             xmlns:viewModels1="clr-namespace:Anna.Gui.ViewModels"
             xmlns:windows="clr-namespace:Anna.Gui.Views.Windows"
             d:DesignHeight="450"
             d:DesignWidth="450"
             x:CompileBindings="True"
             x:DataType="panels:FolderPanelViewModel"
             FontFamily="{Binding $self.Layout.FontFamily}"
             FontSize="{Binding $self.Layout.FontSize}"
             ItemCellCount="{Binding ItemCellCount.Value,
                                     Mode=OneWayToSource}"
             SelectedEntryIndex="{Binding $self.SelectedEntryIndex}"
             mc:Ignorable="d">
    <UserControl.Styles>
        <StyleInclude Source="/Views/Resources/Styles.axaml" />
    </UserControl.Styles>

    <UserControl.Resources>
        <converters:AttributeBrushConverter x:Key="AttributeBrushConverter"
                                            IsCompressedAttributeBrush="{DynamicResource IsCompressedAttributeBrush}"
                                            IsEncryptedAttributeBrush="{DynamicResource IsEncryptedAttributeBrush}"
                                            IsFolderAttributeBrush="{DynamicResource IsFolderAttributeBrush}"
                                            IsHiddenAttributeBrush="{DynamicResource IsHiddenAttributeBrush}"
                                            IsReadOnlyAttributeBrush="{DynamicResource IsReadOnlyAttributeBrush}"
                                            IsReparsePointAttributeBrush="{DynamicResource IsReparsePointAttributeBrush}"
                                            IsSystemAttributeBrush="{DynamicResource IsSystemAttributeBrush}"
                                            NoneAttributeBrush="{DynamicResource EmptyAttributeBrush}" />
    </UserControl.Resources>

    <Interaction.Behaviors>
        <behaviors:FolderPanelInputBehavior />

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.Confirmation}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:ConfirmationDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.InputEntryName}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:InputEntryNameDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.SelectFileCopy}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:SelectFileCopyActionDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.JumpFolder}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:JumpFolderDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.PreviewDisplay}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:EntryPreviewDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.DeleteEntry}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:DeleteEntryDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.CopyOrMoveEntry}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:CopyOrMoveEntryDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.SelectSortModeAndOrder}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:SortModeAndOrderDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.CompressEntry}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:CompressEntryDialog}" />
        </behaviors1:MessageTrigger>

        <behaviors1:MessageTrigger MessageKey="{x:Static windows:MessageKey.DecompressEntry}"
                                   Messenger="{Binding Messenger}">
            <actions:TransitionAction Dic="{Binding Dic}" WindowType="{x:Type dialogs:DecompressEntryDialog}" />
        </behaviors1:MessageTrigger>
    </Interaction.Behaviors>

    <UserControl.Styles>
        <Style Selector="TextBlock.entry" x:DataType="viewModels1:EntryViewModel">
            <Setter Property="Foreground">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource AttributeBrushConverter}"
                                  ConverterParameter="{x:Static converters:AttributeBrushConverterBrushTypes.Foreground}">
                        <Binding Path="Attributes.Value" />
                        <Binding Path="IsOnCursor.Value" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>

            <Setter Property="Background">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource AttributeBrushConverter}"
                                  ConverterParameter="{x:Static converters:AttributeBrushConverterBrushTypes.Background}">
                        <Binding Path="Attributes.Value" />
                        <Binding Path="IsOnCursor.Value" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>

            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        </Style>


        <Style Selector="panels|FileEntryBlock.entry" x:DataType="viewModels1:EntryViewModel">
            <Setter Property="Foreground">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource AttributeBrushConverter}"
                                  ConverterParameter="{x:Static converters:AttributeBrushConverterBrushTypes.Foreground}">
                        <Binding Path="Attributes.Value" />
                        <Binding Path="IsOnCursor.Value" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>

            <Setter Property="Background">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource AttributeBrushConverter}"
                                  ConverterParameter="{x:Static converters:AttributeBrushConverterBrushTypes.Background}">
                        <Binding Path="Attributes.Value" />
                        <Binding Path="IsOnCursor.Value" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>


        <Style Selector="Path.entry" x:DataType="viewModels1:EntryViewModel">
            <Setter Property="Fill">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource AttributeBrushConverter}"
                                  ConverterParameter="{x:Static converters:AttributeBrushConverterBrushTypes.Foreground}">
                        <Binding Path="Attributes.Value" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>

            <Setter Property="Data" Value="M297.5 148.25 148 33.25v67H0v99h148v65z" />
        </Style>

        <Style Selector="StackPanel.entry" x:DataType="viewModels1:EntryViewModel">
            <Setter Property="Height" Value="{Binding $parent[panels:FolderPanel].Layout.ItemHeight}" />
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>

        <Style Selector="Viewbox.entry" x:DataType="viewModels1:EntryViewModel">
            <Setter Property="Width" Value="{Binding $parent[panels:FolderPanel].Layout.ItemHeight}" />
            <Setter Property="Height" Value="{Binding $parent[panels:FolderPanel].Layout.ItemHeight}" />
            <Setter Property="Margin" Value="{x:Static panels:FolderPanelLayout.SelectedMarkMargin}" />
        </Style>
    </UserControl.Styles>

    <panels:FolderPanel.ItemTemplate>
        <templateSelectors:EntryDataTemplateSelector>
            <templateSelectors:EntryDataTemplateSelector.FileDataTemplate>
                <DataTemplate DataType="viewModels1:EntryViewModel">
                    <StackPanel Classes="entry">
                        <Viewbox Classes="entry">
                            <Path Classes="entry" IsVisible="{Binding IsSelected.Value}" />
                        </Viewbox>

                        <panels:FileEntryBlock Classes="entry"
                                               EntryName="{Binding Name.Value}"
                                               EntryNameWidth="{Binding $parent[panels:FolderPanel].Layout.NameWidth}" />


                        <!--
                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.NameWidth}"
                                   Text="{Binding Name.Value}" />

                        <panels:FileEntryBlock Classes="entry"
                                               Width="{Binding $parent[panels:FolderPanel].Layout.NameWidth}" />

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.ExtensionWidth}"
                                   Text="{Binding Extension.Value}" />

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.SizeWidth}"
                                   IsVisible="{Binding $parent[panels:FolderPanel].Layout.IsVisibleSize}">
                            <TextBlock.Text>
                                <MultiBinding Converter="{x:Static converters:EntrySizeToStringConverter.Default}">
                                    <Binding Path="Layout.SizeCount"
                                             RelativeSource="{RelativeSource FindAncestor, AncestorType=panels:FolderPanel}" />
                                    <Binding Path="Size.Value" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.TimestampWidth}"
                                   Text="{Binding Timestamp.Value}" />
                                   -->
                    </StackPanel>
                </DataTemplate>
            </templateSelectors:EntryDataTemplateSelector.FileDataTemplate>

            <templateSelectors:EntryDataTemplateSelector.FolderDataTemplate>
                <DataTemplate DataType="viewModels1:EntryViewModel">
                    <StackPanel Classes="entry">
                        <Viewbox Classes="entry">
                            <Path Classes="entry" IsVisible="{Binding IsSelected.Value}" />
                        </Viewbox>

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.NameWithExtensionWidth}"
                                   Text="{Binding NameWithExtension.Value}" />

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.SizeWidth}"
                                   IsVisible="{Binding $parent[panels:FolderPanel].Layout.IsVisibleSize}"
                                   Text="{Binding $parent[panels:FolderPanel].Layout.SizeCount,
                                                  Converter={x:Static converters:FolderEntrySizeToStringConverter.Default}}" />

                        <TextBlock Classes="entry"
                                   Width="{Binding $parent[panels:FolderPanel].Layout.TimestampWidth}"
                                   Text="{Binding Timestamp.Value}" />
                    </StackPanel>
                </DataTemplate>
            </templateSelectors:EntryDataTemplateSelector.FolderDataTemplate>
        </templateSelectors:EntryDataTemplateSelector>
    </panels:FolderPanel.ItemTemplate>

    <controls:EntriesBag EntryPointerMoved="EntriesBag_OnEntryPointerMoved"
                         EntryPointerPressed="EntriesBag_OnEntryPointerPressed" />
</UserControl>